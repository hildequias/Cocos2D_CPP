#include "LineContainer.h"using namespace cocos2d;LineContainer::LineContainer() {}LineContainer *LineContainer::create(){    LineContainer *obj = new LineContainer();    if ( obj && obj->init() )    {        obj->autorelease();        return obj;    }        CC_SAFE_DELETE( obj );    return obj = nullptr;}bool LineContainer::init(){    if (!DrawNode::init())    {        return false;    }        _dash = 10;    _dashSpace = 10;    _lineType = LINE_NONE;    _screenSize = Director::getInstance()->getWinSize();    _energyLineX = _screenSize.width * 0.96f;    _energyHeight = _screenSize.height * 0.8f;        this->reset();    this->scheduleUpdate();        return true;}void LineContainer::reset() {    _energy = 1.0;    _energyDecrement = 0.005f;}void LineContainer::update (float dt) {        _energy -= dt * _energyDecrement;    if (_energy < 0) _energy = 0;        clear();        switch (_lineType) {        case LINE_NONE:            break;        case LINE_TEMP:            drawLine(_tip, _pivot, Color4F(1.0, 1.0, 1.0, 1.0));            drawDot(_pivot, 5, Color4F(Color3B::WHITE));            break;                    case LINE_DASHED:            drawDot(_pivot, 5, Color4F(Color3B::WHITE));                        int segments = _lineLength / (_dash + _dashSpace);                        float t = 0.0f;            float x_;            float y_;                        for (int i = 0; i < segments + 1; i++) {                                x_ = _pivot.x + t * (_tip.x - _pivot.x);                y_ = _pivot.y + t * (_tip.y - _pivot.y);                                drawDot(Vec2(x_, y_), 5, Color4F(Color3B::WHITE));                t += (float) 1 / segments;            }            break;    }        //draw energy bar    drawLine(Vec2(_energyLineX, _screenSize.height * 0.1f), Vec2(_energyLineX, _screenSize.height * 0.9f), Color4F(0.0, 0.0, 0.0, 1.0));        drawLine(Vec2(_energyLineX, _screenSize.height * 0.1f),             Vec2(_energyLineX, _screenSize.height * 0.1f + _energy * _energyHeight ), Color4F(1.0, 0.5, 0.0, 1.0));}void LineContainer::setEnergyDecrement(float value) {    _energyDecrement += value;}		